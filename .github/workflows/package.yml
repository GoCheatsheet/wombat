on:
  push:
    tags:
    - v*

env:
  wombat-version: ${{ github.ref }}

jobs:
  package:
    strategy:
      matrix:
        go-version: [1.15.x]
        platform: [macos-10.15, ubuntu-16.04, windows-2019]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Chechout
      uses: actions/checkout@v2
    - name: Install Wails
      run: go get -u github.com/wailsapp/wails/cmd/wails@v1.9.1

    - name: Build for darwin
      if: matrix.platform == 'macos-10.15'
      run: |
        mkdir -p ~/.wails
        cp wails.json ~/.wails/
        /usr/libexec/PlistBuddy -c "Set :CFBundleVersion string ${{ env.wombat-version }}" info.plist
        /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString string ${{ env.wombat-version }}" info.plist
        wails build -f -p -ldflags "-X wombat/internal/app.semver=${{ env.wombat-version }}"
    - name: Create darwin disk igage
      if: matrix.platform == 'macos-10.15'
      run: |
        brew install create-dmg
        rm build/wombat
        create-dmg --volname "Wombat" --volicon "assets/darwin/dmg_icon.icns" --background "assets/darwin/dmg_bg.png" --window-size 512 360 --icon-size 100 --icon "Wombat.app" 100 185  --hide-extension "Wombat.app" --app-drop-link 388 185 "Wombat_${{ env.wombat-version }}_Darwin_x86_64.dmg" "build"
    - name: Upload darwin disk image
      if: matrix.platform == 'macos-10.15'
      uses: actions/upload-artifact@v2
      with:
        name: Wombat_${{ env.wombat-version }}_Darwin_x86_64.dmg
        path: Wombat_${{ env.wombat-version }}_Darwin_x86_64.dmg

    - name: Build for linux
      if: matrix.platform == 'ubuntu-16.04'
      run: |
        sudo apt update && sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev
        mkdir -p ~/.wails
        cp wails.json ~/.wails/
        wails build -f -ldflags "-X wombat/internal/app.semver=${{ env.wombat-version }}"
        tar -C build -zcvf Wombat_${{ env.wombat-version }}_Linux_x86_64.tar.gz wombat
    - name: Upload linux tar.gz
      if: matrix.platform == 'ubuntu-16.04'
      uses: actions/upload-artifact@v2
      with:
        name: Wombat_${{ env.wombat-version }}_Linux_x86_64.tar.gz
        path: Wombat_${{ env.wombat-version }}_Linux_x86_64.tar.gz
    - name: Create linux app image
      if: matrix.platform == 'ubuntu-16.04'
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage
        mogrify -resize 512x512 appicon.png
        ./linuxdeploy*.AppImage --appdir AppDir --executable build/wombat --desktop-file AppImage.desktop --icon-file appicon.png --output appimage 
        mv Wombat*.AppImage Wombat_${{ env.wombat-version }}_Linux_x86_64.AppImage
    - name: Upload linux app image
      if: matrix.platform == 'ubuntu-16.04'
      uses: actions/upload-artifact@v2
      with:
        name: Wombat_${{ env.wombat-version }}_Linux_x86_64.AppImage
        path: Wombat_${{ env.wombat-version }}_Linux_x86_64.AppImage

    - name: Build for windows
      if: matrix.platform == 'windows-2019'
      run: |
        New-Item -ItemType directory -Path "$HOME\.wails" -Force
        Copy-Item -Path "$PWD\wails.json" -Destination "$HOME\.wails\wails.json"
        choco install mingw
        wails build -f -p -ldflags "-X wombat/internal/app.semver=${{ env.wombat-version }}"
        Compress-Archive -Path "$PWD\build\wombat.exe" -DestinationPath "$PWD\Wombat_${{ env.wombat-version }}_Windows_x86_64.zip"
    - name: Upload windows zip
      if: matrix.platform == 'windows-2019'
      uses: actions/upload-artifact@v2
      with:
        name: Wombat_${{ env.wombat-version }}_Windows_x86_64.zip
        path: Wombat_${{ env.wombat-version }}_Windows_x86_64.zip

  release:
    runs-on: ubuntu-latest
    needs: package
    steps:
      name: Get changelog url
      id: changelog
      run: echo "::set-output name=url::https://github.com/rogchap/wombat/blob/master/CHANGELOG.md#${{ env.wombat-version }}---$(date +'%Y-%m-%d')" | sed -e 's/\.//g'
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.wombat-version }}
        release_name: ${{ env.wombat-version }}
        body: Full changelog â‡’ [${{ env.wombat-version }}](${{ steps.changelog.outputs.url }})
        draft: true
        prerelease: false
    - name: Download all release pacakges
      uses: actions/download-artifact@v2
    - name: Display structure of downloaded files
      run: ls -R
    # - name: Upload darwin disk image
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #
